from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from spotipy import Spotify
from spotipy.oauth2 import SpotifyClientCredentials
import random

# Spotify API –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
SPOTIFY_CLIENT_ID = "9a4f559d233d4529a98777969954fc54"
SPOTIFY_CLIENT_SECRET = "a6e14fe3e6104e269041e42644a0fa8c"

spotify = Spotify(auth_manager=SpotifyClientCredentials(
    client_id=SPOTIFY_CLIENT_ID,
    client_secret=SPOTIFY_CLIENT_SECRET
))

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–ø–∞–¥–∫–æ–≤–æ—ó –ø—ñ—Å–Ω—ñ
def get_random_track():
    genres = ["pop", "rock", "hip-hop", "jazz", "classical", "indie", "electronic", "country", "metal", "latin"]
    random_genre = random.choice(genres)

    results = spotify.search(q=f"genre:{random_genre}", type="track", limit=50)
    if results['tracks']['items']:
        track = random.choice(results['tracks']['items'])
        return f"{track['name']} - {track['artists'][0]['name']}\n–°–ª—É—Ö–∞—Ç–∏: {track['external_urls']['spotify']}"
    else:
        return "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É –ø—ñ—Å–Ω—é üòû"

# Telegram-–±–æ—Ç
TOKEN = "7922312181:AAGMFWZXnx6gqoDYjwprogWKknvYfDnoYQ8"

# –°—Ç–∞—Ä—Ç–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["üîç –ü–æ—à—É–∫ –º—É–∑–∏–∫–∏", "üé≤ –í–∏–ø–∞–¥–∫–æ–≤–∞ –ø—ñ—Å–Ω—è"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –Ø–∫—É –ø—ñ—Å–Ω—é —Ö–æ—á–µ—à –ø–æ—Å–ª—É—Ö–∞—Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ:", reply_markup=reply_markup
    )

# –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text

    if user_input == "üîç –ü–æ—à—É–∫ –º—É–∑–∏–∫–∏":
        await update.message.reply_text("–ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É –ø—ñ—Å–Ω—ñ –∞–±–æ –≤–∏–∫–æ–Ω–∞–≤—Ü—è –¥–ª—è –ø–æ—à—É–∫—É.")
    elif user_input == "üé≤ –í–∏–ø–∞–¥–∫–æ–≤–∞ –ø—ñ—Å–Ω—è":
        random_song = get_random_track()
        await update.message.reply_text(f"üé≤ –í–∏–ø–∞–¥–∫–æ–≤–∞ –ø—ñ—Å–Ω—è:\n{random_song}")
    else:
        # –ü–æ—à—É–∫ –∑–∞ –≤–≤–µ–¥–µ–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º
        results = spotify.search(q=user_input, type="track", limit=3)
        if results['tracks']['items']:
            search_results = "üîç –ó–Ω–∞–π–¥–µ–Ω–æ:\n"
            for idx, track in enumerate(results['tracks']['items']):
                search_results += (
                    f"{idx + 1}. {track['name']} - {track['artists'][0]['name']}\n"
                    f"–°–ª—É—Ö–∞—Ç–∏: {track['external_urls']['spotify']}\n\n"
                )
            await update.message.reply_text(search_results)
        else:
            await update.message.reply_text("–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ üòû")

# –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–¥
if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()

    # –û–±—Ä–æ–±–Ω–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
    app.run_polling()
